version: '3.4'

networks:
  # This special network is configured so that the local metadata
  # service can bind to the specific IP address that ECS uses
  # in production
  credentials_network:
    driver: bridge
    ipam:
      config:
        - subnet: "169.254.170.0/24"
          gateway: 169.254.170.1

services:
  # This container vends credentials to your containers
  ecs-local-endpoints:
    # The Amazon ECS Local Container Endpoints Docker Image
    image: amazon/amazon-ecs-local-container-endpoints
    volumes:
      # Mount /var/run so we can access docker.sock and talk to Docker
      - /var/run:/var/run
      # Mount the shared configuration directory, used by the AWS CLI and AWS SDKs
      # On Windows, this directory can be found at "%UserProfile%\.aws"
      - ${USERPROFILE}\.aws:/home/.aws/
    environment:
      # define the home folder; credentials will be read from $HOME/.aws
      HOME: "/home"
      AWS_PROFILE: "default"
      COMPOSE_CONVERT_WINDOWS_PATHS: 1
    networks:
      credentials_network:
        # This special IP address is recognized by the AWS SDKs and AWS CLI 
        ipv4_address: "169.254.170.2"

  satelittibpms:
    environment:
      ASPNETCORE_ENVIRONMENT: DockerLocal
      AWS_DEFAULT_REGION: "us-east-1"
      AWS_CONTAINER_CREDENTIALS_RELATIVE_URI: "/creds"
      COMPOSE_CONVERT_WINDOWS_PATHS: 1
    ports:
      - 6924:80
    depends_on:
      - ecs-local-endpoints
    networks:
      credentials_network:
        ipv4_address: "169.254.170.3"
         
  mysql:
    image: mysql:8.0.17
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    ports:
      - 3307:3306
    volumes:
      - type: bind
        source: "C:\\databases\\mysql-8_0_17"
        target: /var/lib/mysql/
    networks:
      credentials_network:
        ipv4_address: "169.254.170.4"